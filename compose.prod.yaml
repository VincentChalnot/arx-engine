services:
  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/vincentchalnot/arx-engine-frontend:latest}
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arx-frontend-${ENVIRONMENT:-prod}.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.arx-frontend-${ENVIRONMENT:-prod}.entrypoints=websecure"
      - "traefik.http.routers.arx-frontend-${ENVIRONMENT:-prod}.tls.certresolver=gandi"
      - "traefik.http.services.arx-frontend-${ENVIRONMENT:-prod}.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/vincentchalnot/arx-engine-backend:latest}
    networks:
      - proxy
    environment:
      - RUST_LOG=${RUST_LOG:-info}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arx-backend-${ENVIRONMENT:-prod}.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.arx-backend-${ENVIRONMENT:-prod}.entrypoints=websecure"
      - "traefik.http.routers.arx-backend-${ENVIRONMENT:-prod}.tls.certresolver=gandi"
      - "traefik.http.services.arx-backend-${ENVIRONMENT:-prod}.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

networks:
  proxy:
    external: true
